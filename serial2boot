#!/bin/bash

wait_load(){

	while 2>&1>/dev/null killall -0 sx 2>&1>/dev/null; do
		sleep 0.5
	done
}

usage(){
	echo "usage: serial2boot -f <file name> -s <serial port>"
	echo "       see serial2boot -h for more details"
}

BOOT_FILE=u-boot-spl.bin
SERIAL_PORT=/dev/ttyUSB0

while getopts ":s:f:h" opt; do
	case $opt in
		h)
			echo ""
			echo "usage: serial2boot -f <file name> -s <serial port>"
			echo ""
			echo "options:"
			echo "-h	show brief help"
			echo "-f	file to load. Default u-boot-spl.bin"
			echo "	This is the raw binary without headers and can usually be found in u-boot/spl"
			echo "-s 	serial port. Default /dev/ttyUSB1"
			exit 0
			;;
		f)
			BOOT_FILE=$OPTARG
			;;
		s)
			SERIAL_PORT=$OPTARG
			;;
		:)
			echo "Option -$OPTARG requires an argument." >&2
			exit 1
			;;
	esac
done

if [ ! -c "$SERIAL_PORT" ]
then
	echo "$SERIAL_PORT does not exist or is not a character device."
	exit 1
fi

if [ ! -e "$BOOT_FILE" ]
then
	echo "$BOOT_FILE does not exist."
	exit 1
fi

#Stop any previous screen sessions
`2>&1 > /dev/null screen -S test -p 0 -X quit`

echo "Opening serial port $SERIAL_PORT @ 115200"
#set the serial port speed
`2>&1 > /dev/null stty -F $SERIAL_PORT ospeed 115200 2>&1 > /dev/null`

echo "Waiting for boot char on serial port"
READ=`dd if=$SERIAL_PORT count=1 2> /dev/null`

echo "Serial port ready"
if [ "$READ" == "C" ]; then
	echo "Loading $BOOT_FILE ...."
	#Start a screen session on the serial port
	`screen -S test -d -m $SERIAL_PORT 115200 screen -x test`
	sleep 1
	#Tell the screen session to execute sx to load the boot file
	`screen -S test -p 0 -X exec \!\! sx -kX $BOOT_FILE`
	#Wait for the sx process to finish
	wait_load
	echo "Loading done...."
	sleep 1
	`screen -S test -p 0 -X quit`
	exit 0
fi
